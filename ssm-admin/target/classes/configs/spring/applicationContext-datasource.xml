<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${main.db.url}"/>
        <property name="username" value="${main.db.username}"/>
        <property name="password" value="${main.db.password}"/>
        <property name="filters" value="stat"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="50"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="2"/>
        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="mainSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mainDataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations">
            <array>
                <value>classpath:cn/com/ssm/common/mapper/*.xml</value>
            </array>
        </property>
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageHelper">-->
                    <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--dialect=mysql-->
                            <!--reasonable=true-->
                            <!--supportMethodsArguments=true-->
                            <!--params=count=countSql-->
                            <!--autoRuntimeDialect=true-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->

                <!--<bean class="com.ivymei.framework.plugin.PerformanceInterceptor"/>-->

            <!--</array>-->
        <!--</property>-->
    </bean>

    <!-- 配置扫描器  DAO接口所在包名，Spring会自动查找其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="cn.com.ssm.common.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="mainSqlSessionFactory"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mainDataSource" />
    </bean>

    <!-- 配置基于aop的声明式事务 -->
    <aop:aspectj-autoproxy/>

    <aop:config>
        <!-- 通配符解释 第一个*表示任意返回值类型;第二个*表示该包下的任意类;第三个*表示该类下的任意方法；最后的..表示可以用多个参数 -->
        <aop:pointcut id="pointCutService" expression="execution(* cn.com.ssm.admin.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCutService"/>
    </aop:config>


    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- <tx:method name="find*" read-only="true" />
            <tx:method name="get*" read-only="true" /> -->
            <tx:method name="*" rollback-for="Exception" isolation="DEFAULT" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>


</beans>